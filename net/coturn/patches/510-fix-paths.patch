--- a/src/apps/common/apputils.c
+++ b/src/apps/common/apputils.c
@@ -1010,7 +1010,10 @@ char *_WTA(__in wchar_t *pszInBuf, __in
 #define ETCDIR2 INSTALL_PREFIX / etc / coturn /
 #define QETCDIR2 QUOTE(ETCDIR2)
 
-static const char *config_file_search_dirs[] = {"./",
+static const char *config_file_search_dirs[] = {"/opt/etc/",
+                                                "/opt/etc/turnserver/",
+                                                "/opt/etc/coturn/",
+                                                "./",
                                                 "./turnserver/",
                                                 "./coturn/",
                                                 "./etc/",
--- a/src/apps/common/ns_turn_utils.c
+++ b/src/apps/common/ns_turn_utils.c
@@ -404,7 +404,7 @@ static void set_rtpfile(void) {
     else
       snprintf(logtail, FILE_STR_LEN, "turn_%d_", (int)getpid());
 
-    if (snprintf(logbase, FILE_STR_LEN, "/var/log/turnserver/%s", logtail) < 0)
+    if (snprintf(logbase, FILE_STR_LEN, "/opt/var/log/turnserver/%s", logtail) < 0)
       TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "String truncation occured.\n");
 
     set_log_file_name(logbase, logf);
@@ -413,7 +413,7 @@ static void set_rtpfile(void) {
     if (_rtpfile)
       TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "log file opened: %s\n", logf);
     else {
-      if (snprintf(logbase, FILE_STR_LEN, "/var/log/%s", logtail) < 0)
+      if (snprintf(logbase, FILE_STR_LEN, "/opt/var/log/%s", logtail) < 0)
         TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "String truncation occured.\n");
 
       set_log_file_name(logbase, logf);
@@ -421,7 +421,7 @@ static void set_rtpfile(void) {
       if (_rtpfile)
         TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "log file opened: %s\n", logf);
       else {
-        if (snprintf(logbase, FILE_STR_LEN, "/var/tmp/%s", logtail) < 0)
+        if (snprintf(logbase, FILE_STR_LEN, "/opt/var/tmp/%s", logtail) < 0)
           TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "String truncation occured.\n");
 
         set_log_file_name(logbase, logf);
@@ -429,7 +429,7 @@ static void set_rtpfile(void) {
         if (_rtpfile)
           TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "log file opened: %s\n", logf);
         else {
-          if (snprintf(logbase, FILE_STR_LEN, "/tmp/%s", logtail) < 0)
+          if (snprintf(logbase, FILE_STR_LEN, "/opt/tmp/%s", logtail) < 0)
             TURN_LOG_FUNC(TURN_LOG_LEVEL_INFO, "String truncation occured.\n");
           set_log_file_name(logbase, logf);
           _rtpfile = fopen(logf, "a");
--- a/src/apps/relay/mainrelay.c
+++ b/src/apps/relay/mainrelay.c
@@ -131,7 +131,7 @@ turn_params_t turn_params = {
 
     0, /* do_not_use_config_file */
 
-    "/var/run/turnserver.pid", /* pidfile */
+    "/opt/var/run/turnserver.pid", /* pidfile */
     "",                        /* acme_redirect */
 
     ////////////////  Listener server /////////////////
@@ -998,8 +998,8 @@ static char Usage[] =
     "treated separately).\n"
     " -c				<filename>	Configuration file name (default - turnserver.conf).\n"
 #if !defined(TURN_NO_SQLITE)
-    " -b, , --db, --userdb	<filename>		SQLite database file name; default - /var/db/turndb or\n"
-    "						    /usr/local/var/db/turndb or /var/lib/turn/turndb.\n"
+    " -b, , --db, --userdb	<filename>		SQLite database file name; default - /opt/var/db/turndb or\n"
+    "						    /opt/var/lib/turn/turndb.\n"
 #endif
 #if !defined(TURN_NO_PQ)
     " -e, --psql-userdb, --sql-userdb <conn-string>	PostgreSQL database connection string, if used (default - "
@@ -1142,7 +1142,7 @@ static char Usage[] =
     " --no-tcp-relay					Do not allow TCP relay endpoints, use only UDP relay options.\n"
     " -l, --log-file		<filename>		Option to set the full path name of the log file.\n"
     "						By default, the turnserver tries to open a log file in\n"
-    "						/var/log/turnserver/, /var/log, /var/tmp, /tmp and . (current) "
+    "						/opt/var/log/turnserver/, /opt/var/log, /opt/var/tmp, /opt/tmp and . (current) "
     "directories\n"
     "						(which open operation succeeds first that file will be used).\n"
     "						With this option you can set the definite log file name.\n"
@@ -1203,8 +1203,8 @@ static char Usage[] =
     "connect to the turn server.\n"
     "						Multiple denied-peer-ip can be set.\n"
     " --pidfile <\"pid-file-name\">			File name to store the pid of the process.\n"
-    "						Default is /var/run/turnserver.pid (if superuser account is used) or\n"
-    "						/var/tmp/turnserver.pid .\n"
+    "						Default is /opt/var/run/turnserver.pid (if superuser account is used) or\n"
+    "						/opt/var/tmp/turnserver.pid .\n"
     " --acme-redirect <URL>				Redirect ACME, i.e. HTTP GET requests matching "
     "'^/.well-known/acme-challenge/(.*)' to '<URL>$1'.\n"
     "						Default is '', i.e. no special handling for such requests.\n"
@@ -1305,8 +1305,8 @@ static char AdminUsage[] =
     "					output an encrypted form of password with AES-128\n"
     "\nOptions with mandatory values:\n\n"
 #if !defined(TURN_NO_SQLITE)
-    "	-b, --db, --userdb		SQLite database file, default value is /var/db/turndb or\n"
-    "					  /usr/local/var/db/turndb or /var/lib/turn/turndb.\n"
+    "	-b, --db, --userdb		SQLite database file, default value is /opt/var/db/turndb or\n"
+    "					  /opt/var/lib/turn/turndb.\n"
 #endif
 #if !defined(TURN_NO_PQ)
     "	-e, --psql-userdb, --sql-userdb	PostgreSQL user database connection string, if PostgreSQL DB is used.\n"
@@ -3180,7 +3180,9 @@ int main(int argc, char **argv) {
       TURN_LOG_FUNC(TURN_LOG_LEVEL_WARNING, "Cannot create pid file: %s\n", turn_params.pidfile);
 
       {
-        const char *pfs[] = {"/var/run/turnserver.pid",
+        const char *pfs[] = {"/opt/var/run/turnserver.pid",
+                             "/opt/var/spool/turnserver.pid",
+                             "/var/run/turnserver.pid",
                              "/var/spool/turnserver.pid",
                              "/var/turnserver.pid",
                              "/var/tmp/turnserver.pid",
