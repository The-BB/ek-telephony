rtpp_socket.c:262:31: error: passing argument 5 of 'recvfromto' from incompatible pointer type [-Wincompatible-pointer-types]
  262 |       sstosa(&packet->raddr), &packet->rlen, sstosa(&packet->_laddr), &llen,
      |                               ^~~~~~~~~~~~~
      |                               |
      |                               socklen_t * {aka unsigned int *}
...
rtpp_network.c:365:1: error: conflicting types for 'recvfromto'; have 'ssize_t(int,  void *, size_t,  struct sockaddr *, size_t *, struct sockaddr *, size_t *, struct timeval *)' {aka 'long int(int,  void *, long unsigned int,  struct sockaddr *, long unsigned int *, struct sockaddr *, long unsigned int *, struct timeval *)'}
  365 | recvfromto(int s, void *buf, size_t len, struct sockaddr *from,
      | ^~~~~~~~~~
...
rtpp_refcnt.c:169:9: error: implicit declaration of function 'asprintf'; did you mean 'vsprintf'? [-Wimplicit-function-declaration]
  169 |         asprintf(&dbuf, "rtpp_refcnt(%p, %u).incref()", pub, pvt->cnt);
      |         ^~~~~~~~
      |         vsprintf

---

--- a/src/rtpp_network.c
+++ b/src/rtpp_network.c
@@ -363,7 +363,7 @@ setbindhost(struct sockaddr *ia, int pf,
 
 ssize_t
 recvfromto(int s, void *buf, size_t len, struct sockaddr *from,
-  size_t *fromlen, struct sockaddr *to, size_t *tolen,
+  uint32_t *fromlen, struct sockaddr *to, size_t *tolen,
   struct timeval *timeptr)
 {
     /* We use a union to make sure hdr is aligned */
--- a/src/rtpp_network.h
+++ b/src/rtpp_network.h
@@ -53,7 +53,7 @@ int local4remote(const struct sockaddr *
 int extractaddr(const char *, char **, char **, int *);
 int setbindhost(struct sockaddr *, int, const char *, const char *);
 ssize_t recvfromto(int, void *, size_t, struct sockaddr *,
-  size_t *, struct sockaddr *, size_t *, struct timeval *);
+  uint32_t *, struct sockaddr *, size_t *, struct timeval *);
 
 /* Some handy/compat macros */
 #if !defined(AF_LOCAL)
--- a/src/rtpp_refcnt.c
+++ b/src/rtpp_refcnt.c
@@ -25,6 +25,8 @@
  *
  */
 
+#define _GNU_SOURCE /* asprintf */
+
 #ifndef HAVE_GCC_ATOMICS
 #include <pthread.h>
 #endif
